/**
 * Generated by @openapi-codegen
 *
 * @version 0.1.0
 */
export type AddWebPagesRequest = {
  project_id: string;
  urls: string[];
};

export type ChatHistory = {
  role: string;
  message: string;
};

export type ChatRequest = {
  query: string;
  history?: ChatHistory[];
};

export type ChatResponse = {
  messages: string[];
};

export type GetPresignedUrlRequest = {
  key: string;
  /**
   * @default 300
   */
  expiration?: number;
  /**
   * ID of the project to which the context belongs
   */
  project_id: string;
  /**
   * Size of the file in bytes
   */
  file_size: number;
  /**
   * Type of the file
   */
  file_type: string;
};

export type HTTPValidationError = {
  detail?: ValidationError[];
};

export type LoginRequest = {
  /**
   * User's Email
   */
  email: string;
  /**
   * User's Password
   */
  password: string;
};

export type MarkSuccess = {
  success: boolean;
};

export type MarkUploadStatusRequest = {
  file_id: string;
};

export type PresignedUrl = {
  url: string;
  file_id: string;
};

export type SignupDiscordRequest = {
  /**
   * Discord Auth Code
   */
  code: string;
  /**
   * Guild ID
   */
  guild_id: string;
  /**
   * Permissions
   */
  permissions: string;
  /**
   * Redirect URI
   */
  redirect_uri: string;
};

export type SignupRequest = {
  /**
   * User's Email
   */
  email: string;
  /**
   * User's Password
   */
  password: string;
  /**
   * User's First Name
   */
  first_name: string;
  /**
   * User's Last Name
   */
  last_name: string;
};

export type TAuthResponse = {
  /**
   * Access Token
   */
  access_token: string;
  /**
   * Token Type
   */
  token_type: string;
  /**
   * Expiry
   */
  expiry: number;
};

export type TDiscordChannel = {
  id: string;
  guild_id: string;
  name: string;
};

export type TDiscordCreateInteractionRequest = {
  project_id: string;
  guild_id: string;
  channel_id: string;
  title: string;
  content: string;
  button: string;
  color: string;
};

export type TDiscordCreateInteractionResponse = {
  message_id: string;
};

export type TDiscordInteraction = {
  id: string;
  project_id: string;
  guild_id: string;
  channel_id: string;
  message_id: string;
  message_information: Record<string, any>;
  updated_at: string;
};

export type TProject = {
  /**
   * Project's ID
   */
  id: string;
  /**
   * Project's Name
   */
  name: string;
  /**
   * Project's Owner ID
   */
  owner_id: string;
  /**
   * Project's Description
   */
  description: string | null;
};

export type TSource = {
  id: string;
  project_id: string;
  name: string;
  status: string;
  source_type: string;
  url?: string | null;
  created_at: string;
  extra_metadata?: Record<string, any> | null;
  user_id: string;
};

export type TUser = {
  /**
   * User's ID
   */
  id: string;
  /**
   * User's Email
   */
  email?: string | null;
  /**
   * User's First Name
   */
  first_name?: string | null;
  /**
   * User's Last Name
   */
  last_name?: string | null;
  /**
   * User's Discord ID
   */
  discord_id?: string | null;
  /**
   * User's Discord Username
   */
  discord_username?: string | null;
  /**
   * User's Signin Provider
   */
  signin_provider?: string | null;
  /**
   * User's Created At
   */
  created_at: string;
};

export type ValidationError = {
  loc: (string | number)[];
  msg: string;
  type: string;
};
